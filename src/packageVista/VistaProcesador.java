/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package packageVista;

import Controlador.Controlador;
import com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel;
import java.awt.Image;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.nio.file.Files;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.plaf.metal.MetalLookAndFeel;
import javax.swing.plaf.nimbus.NimbusLookAndFeel;

/**
 *
 * @author Maria Jose
 */
public class VistaProcesador extends javax.swing.JFrame {
       
    /**
     * Creates new form VistaProcesador
     */
    public VistaProcesador() {
        initComponents();
        filterXML = new FileNameExtensionFilter("XML file","xml","XML");
        jFileChooser1.addChoosableFileFilter(filterXML);
        
        filterHTML = new FileNameExtensionFilter("HTML file","html","htm");
        jFileChooser1.addChoosableFileFilter(filterHTML);
    
        filterDTD = new FileNameExtensionFilter("DTD file","dtd");
        jFileChooser1.addChoosableFileFilter(filterDTD);
        
        filterXSD = new FileNameExtensionFilter("XSD file","xsd");
        jFileChooser1.addChoosableFileFilter(filterXSD);
        
        filterXSLT = new FileNameExtensionFilter("XSLT file","xslt", "xsl");
        jFileChooser1.addChoosableFileFilter(filterXSLT);
        
        filterXQ = new FileNameExtensionFilter("xQuery file","xq","xquery");
        jFileChooser1.addChoosableFileFilter(filterXQ);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        validardtd = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDTD = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultadoDTD = new javax.swing.JTextArea();
        cargarXML1 = new javax.swing.JButton();
        cargarDTD = new javax.swing.JButton();
        validarDTD = new javax.swing.JButton();
        guardarDTD = new javax.swing.JButton();
        limpiarDTD = new javax.swing.JButton();
        labelXML_DTD = new javax.swing.JLabel();
        labelDTD_DTD = new javax.swing.JLabel();
        resultadodtd = new javax.swing.JLabel();
        validarxsd = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaXML2 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextAreaXSD = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        resultadoXSD = new javax.swing.JTextArea();
        cargarXML2 = new javax.swing.JButton();
        cargarXSD = new javax.swing.JButton();
        validarXSD = new javax.swing.JButton();
        guardarXSD = new javax.swing.JButton();
        limpiarXSD = new javax.swing.JButton();
        labelXML_XSD = new javax.swing.JLabel();
        labelXSD_XSD = new javax.swing.JLabel();
        resultadoxpath = new javax.swing.JLabel();
        validarxpath = new javax.swing.JPanel();
        jTextFieldXPATH = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextAreaXML3 = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        resultadoXPATH = new javax.swing.JTextArea();
        cargarXML3 = new javax.swing.JButton();
        evaluarXPATH = new javax.swing.JButton();
        limpiarXPATH = new javax.swing.JButton();
        labelXML_XPath = new javax.swing.JLabel();
        resultado3 = new javax.swing.JLabel();
        validarxslt = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextAreaXML4 = new javax.swing.JTextArea();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTextAreaXSLT = new javax.swing.JTextArea();
        jScrollPane10 = new javax.swing.JScrollPane();
        resultadoXSLT = new javax.swing.JTextArea();
        cargarXML4 = new javax.swing.JButton();
        guardarXML = new javax.swing.JButton();
        cargarXSLT = new javax.swing.JButton();
        guardarXSLT = new javax.swing.JButton();
        HTMLsalida = new javax.swing.JButton();
        ejecutarXSLT = new javax.swing.JButton();
        labelXML_XSLT = new javax.swing.JLabel();
        labelXSLT_XSLT = new javax.swing.JLabel();
        resultadoxslt = new javax.swing.JLabel();
        labelsalidaHTML = new javax.swing.JLabel();
        limpiarDTD1 = new javax.swing.JButton();
        lblMostrarHTML = new javax.swing.JLabel();
        about = new javax.swing.JPanel();
        about1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jItemSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jItemMetal = new javax.swing.JMenuItem();
        jItemNimbus = new javax.swing.JMenuItem();
        jItemSistema = new javax.swing.JMenuItem();
        jItemClasico = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Procesador XML");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTextAreaDTD.setColumns(20);
        jTextAreaDTD.setRows(5);
        jScrollPane1.setViewportView(jTextAreaDTD);

        resultadoDTD.setColumns(20);
        resultadoDTD.setRows(5);
        jScrollPane2.setViewportView(resultadoDTD);

        cargarXML1.setText("Cargar XML");
        cargarXML1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarXML1ActionPerformed(evt);
            }
        });

        cargarDTD.setText("Cargar DTD");
        cargarDTD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarDTDActionPerformed(evt);
            }
        });

        validarDTD.setText("Validar");
        validarDTD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validarDTDActionPerformed(evt);
            }
        });

        guardarDTD.setText("Guardar");

        limpiarDTD.setText("Limpiar");
        limpiarDTD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarDTDActionPerformed(evt);
            }
        });

        labelXML_DTD.setText("Archivo XML...");

        labelDTD_DTD.setText("Archivo DTD...");

        resultadodtd.setText("Resultado:");

        javax.swing.GroupLayout validardtdLayout = new javax.swing.GroupLayout(validardtd);
        validardtd.setLayout(validardtdLayout);
        validardtdLayout.setHorizontalGroup(
            validardtdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(validardtdLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(validardtdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cargarXML1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cargarDTD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(limpiarDTD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(guardarDTD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(validarDTD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(35, 35, 35)
                .addGroup(validardtdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(resultadodtd, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelXML_DTD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelDTD_DTD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(validardtdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        validardtdLayout.setVerticalGroup(
            validardtdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(validardtdLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(validardtdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(validardtdLayout.createSequentialGroup()
                        .addGroup(validardtdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cargarXML1)
                            .addComponent(labelXML_DTD))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(validardtdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cargarDTD)
                            .addComponent(labelDTD_DTD))))
                .addGap(51, 51, 51)
                .addGroup(validardtdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(validardtdLayout.createSequentialGroup()
                        .addGroup(validardtdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(resultadodtd)
                            .addComponent(validarDTD))
                        .addGap(18, 18, 18)
                        .addComponent(guardarDTD)
                        .addGap(18, 18, 18)
                        .addComponent(limpiarDTD)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Validar DTD", validardtd);

        jTextAreaXML2.setColumns(20);
        jTextAreaXML2.setRows(5);
        jScrollPane3.setViewportView(jTextAreaXML2);

        jTextAreaXSD.setColumns(20);
        jTextAreaXSD.setRows(5);
        jScrollPane4.setViewportView(jTextAreaXSD);

        resultadoXSD.setColumns(20);
        resultadoXSD.setRows(5);
        jScrollPane5.setViewportView(resultadoXSD);

        cargarXML2.setText("Cargar XML");
        cargarXML2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarXML2ActionPerformed(evt);
            }
        });

        cargarXSD.setText("Cargar XSD");
        cargarXSD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarXSDActionPerformed(evt);
            }
        });

        validarXSD.setText("Validar");
        validarXSD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validarXSDActionPerformed(evt);
            }
        });

        guardarXSD.setText("Guardar");

        limpiarXSD.setText("Limpiar");
        limpiarXSD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarXSDActionPerformed(evt);
            }
        });

        labelXML_XSD.setText("Archivo XML...");

        labelXSD_XSD.setText("Archivo XSD...");

        resultadoxpath.setText("Resultado:");

        javax.swing.GroupLayout validarxsdLayout = new javax.swing.GroupLayout(validarxsd);
        validarxsd.setLayout(validarxsdLayout);
        validarxsdLayout.setHorizontalGroup(
            validarxsdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(validarxsdLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(validarxsdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(validarxsdLayout.createSequentialGroup()
                        .addGroup(validarxsdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(validarxsdLayout.createSequentialGroup()
                                .addComponent(cargarXML2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelXML_XSD))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 15, Short.MAX_VALUE)
                        .addGroup(validarxsdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(validarxsdLayout.createSequentialGroup()
                                .addComponent(cargarXSD)
                                .addGap(18, 18, 18)
                                .addComponent(labelXSD_XSD))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(26, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, validarxsdLayout.createSequentialGroup()
                        .addGroup(validarxsdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(validarXSD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(guardarXSD, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                            .addComponent(limpiarXSD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(validarxsdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(resultadoxpath))
                        .addGap(139, 139, 139))))
        );
        validarxsdLayout.setVerticalGroup(
            validarxsdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(validarxsdLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(validarxsdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cargarXML2)
                    .addComponent(cargarXSD)
                    .addComponent(labelXML_XSD)
                    .addComponent(labelXSD_XSD))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(validarxsdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addGap(18, 18, 18)
                .addComponent(resultadoxpath)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(validarxsdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(validarxsdLayout.createSequentialGroup()
                        .addComponent(validarXSD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(guardarXSD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(limpiarXSD))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Validad XSD", validarxsd);

        jTextAreaXML3.setColumns(20);
        jTextAreaXML3.setRows(5);
        jScrollPane6.setViewportView(jTextAreaXML3);

        resultadoXPATH.setColumns(20);
        resultadoXPATH.setRows(5);
        jScrollPane7.setViewportView(resultadoXPATH);

        cargarXML3.setText("Cargar XML");
        cargarXML3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarXML3ActionPerformed(evt);
            }
        });

        evaluarXPATH.setText("Evaluar XPath");
        evaluarXPATH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evaluarXPATHActionPerformed(evt);
            }
        });

        limpiarXPATH.setText("Limpiar XPath");
        limpiarXPATH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarXPATHActionPerformed(evt);
            }
        });

        labelXML_XPath.setText("Archivo XML...");

        resultado3.setText("Resultado:");

        javax.swing.GroupLayout validarxpathLayout = new javax.swing.GroupLayout(validarxpath);
        validarxpath.setLayout(validarxpathLayout);
        validarxpathLayout.setHorizontalGroup(
            validarxpathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(validarxpathLayout.createSequentialGroup()
                .addGroup(validarxpathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(validarxpathLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(validarxpathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(evaluarXPATH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(limpiarXPATH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cargarXML3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelXML_XPath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(84, 84, 84))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, validarxpathLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(resultado3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(validarxpathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldXPATH)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
                    .addComponent(jScrollPane7))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        validarxpathLayout.setVerticalGroup(
            validarxpathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(validarxpathLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(validarxpathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldXPATH, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cargarXML3))
                .addGroup(validarxpathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(validarxpathLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(validarxpathLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(labelXML_XPath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(evaluarXPATH)
                        .addGap(42, 42, 42)
                        .addComponent(limpiarXPATH)))
                .addGap(18, 18, 18)
                .addGroup(validarxpathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resultado3))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Validar XPath", validarxpath);

        jTextAreaXML4.setColumns(20);
        jTextAreaXML4.setRows(5);
        jScrollPane8.setViewportView(jTextAreaXML4);

        jTextAreaXSLT.setColumns(20);
        jTextAreaXSLT.setRows(5);
        jScrollPane9.setViewportView(jTextAreaXSLT);

        resultadoXSLT.setColumns(20);
        resultadoXSLT.setRows(5);
        jScrollPane10.setViewportView(resultadoXSLT);

        cargarXML4.setText("Cargar XML");
        cargarXML4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarXML4ActionPerformed(evt);
            }
        });

        guardarXML.setText("Guardar XML");
        guardarXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarXMLActionPerformed(evt);
            }
        });

        cargarXSLT.setText("Cargar XSLT");
        cargarXSLT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarXSLTActionPerformed(evt);
            }
        });

        guardarXSLT.setText("Guardar XSLT");

        HTMLsalida.setText("HTML Salida");
        HTMLsalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HTMLsalidaActionPerformed(evt);
            }
        });

        ejecutarXSLT.setText("Ejecutar");
        ejecutarXSLT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ejecutarXSLTActionPerformed(evt);
            }
        });

        labelXML_XSLT.setText("ArchivoXML...");

        labelXSLT_XSLT.setText("Archivo XSLT...");

        resultadoxslt.setText("Resultado:");

        labelsalidaHTML.setText("Archivo HTML...");

        limpiarDTD1.setText("Limpiar");
        limpiarDTD1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarDTD1ActionPerformed(evt);
            }
        });

        lblMostrarHTML.setText("Resultado formateado en HTML");

        javax.swing.GroupLayout validarxsltLayout = new javax.swing.GroupLayout(validarxslt);
        validarxslt.setLayout(validarxsltLayout);
        validarxsltLayout.setHorizontalGroup(
            validarxsltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(validarxsltLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(validarxsltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(validarxsltLayout.createSequentialGroup()
                        .addComponent(cargarXML4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelXML_XSLT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(guardarXML))
                    .addGroup(validarxsltLayout.createSequentialGroup()
                        .addGroup(validarxsltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(HTMLsalida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ejecutarXSLT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelsalidaHTML, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(limpiarDTD1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(validarxsltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(resultadoxslt)
                            .addComponent(jScrollPane10))))
                .addGap(15, 15, 15)
                .addGroup(validarxsltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(validarxsltLayout.createSequentialGroup()
                        .addComponent(cargarXSLT)
                        .addGap(12, 12, 12)
                        .addComponent(labelXSLT_XSLT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addComponent(guardarXSLT))
                    .addComponent(jScrollPane9)
                    .addComponent(lblMostrarHTML, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        validarxsltLayout.setVerticalGroup(
            validarxsltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(validarxsltLayout.createSequentialGroup()
                .addGroup(validarxsltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(validarxsltLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(guardarXSLT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(validarxsltLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(validarxsltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cargarXML4)
                            .addComponent(labelXML_XSLT)
                            .addComponent(cargarXSLT)
                            .addComponent(guardarXML)
                            .addComponent(labelXSLT_XSLT))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultadoxslt)
                .addGap(9, 9, 9)
                .addGroup(validarxsltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblMostrarHTML, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane10)
                    .addGroup(validarxsltLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(HTMLsalida)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelsalidaHTML)
                        .addGap(25, 25, 25)
                        .addComponent(ejecutarXSLT)
                        .addGap(27, 27, 27)
                        .addComponent(limpiarDTD1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Validar XSLT", validarxslt);

        jLabel1.setText("Realizdo por: ");

        jLabel2.setText("Eloy Castro García");

        jLabel3.setText("Pedro José Torrebejano Guerrero");

        jLabel4.setText("Maria José Rodríguez Martínez");

        jLabel5.setText("Juan Martínez Medina");

        jLabel6.setText("Este proyecto pertenece a Software libre. Esta permitido su uso, modificación y difusión.");

        jLabel7.setText("1ºDAM-LLMM-2016");

        javax.swing.GroupLayout about1Layout = new javax.swing.GroupLayout(about1);
        about1.setLayout(about1Layout);
        about1Layout.setHorizontalGroup(
            about1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(about1Layout.createSequentialGroup()
                .addGroup(about1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(about1Layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addGroup(about1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(about1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(about1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        about1Layout.setVerticalGroup(
            about1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(about1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addContainerGap(102, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout aboutLayout = new javax.swing.GroupLayout(about);
        about.setLayout(aboutLayout);
        aboutLayout.setHorizontalGroup(
            aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 795, Short.MAX_VALUE)
            .addGroup(aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(aboutLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(about1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        aboutLayout.setVerticalGroup(
            aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
            .addGroup(aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(aboutLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(about1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("About", about);

        jMenu1.setText("Archivo");

        jItemSalir.setText("Salir");
        jItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jItemSalirActionPerformed(evt);
            }
        });
        jMenu1.add(jItemSalir);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");

        jItemMetal.setText("Metal");
        jItemMetal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jItemMetalActionPerformed(evt);
            }
        });
        jMenu2.add(jItemMetal);

        jItemNimbus.setText("Nimbus");
        jItemNimbus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jItemNimbusActionPerformed(evt);
            }
        });
        jMenu2.add(jItemNimbus);

        jItemSistema.setText("Sistema");
        jItemSistema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jItemSistemaActionPerformed(evt);
            }
        });
        jMenu2.add(jItemSistema);

        jItemClasico.setText("Clasico");
        jItemClasico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jItemClasicoActionPerformed(evt);
            }
        });
        jMenu2.add(jItemClasico);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Validar DTD");

        pack();
    }// </editor-fold>//GEN-END:initComponents
      
    private void cargarXML3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarXML3ActionPerformed
    jFileChooser1.setFileFilter(filterXML);
        int returnVal= jFileChooser1.showOpenDialog(VistaProcesador.this);
        
        if(returnVal == jFileChooser1.APPROVE_OPTION){
        File file=jFileChooser1.getSelectedFile();
        jTextAreaXML2.setText("Cargando archivo:\n"+file.getName());
           jFileChooser1.setFileFilter(filterXML);
 try {
                jTextAreaXML3.setText(
                        new String (Files.readAllBytes(file.toPath())));
                
                if(controlador == null){
                    controlador = new Controlador(file);
                }else{
                    controlador.setFile(file);
                }
                
            } catch (IOException ex) {
               
                
            }
            labelXML_XPath.setText(file.getName());
        
        
        }else{
            
        }
    }//GEN-LAST:event_cargarXML3ActionPerformed

    private void evaluarXPATHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evaluarXPATHActionPerformed
         if(!jTextFieldXPATH.getText().isEmpty()){
               resultadoXPATH.setText(controlador.xPathEvaluate(jTextFieldXPATH.getText()));
        }
    }//GEN-LAST:event_evaluarXPATHActionPerformed

    private void cargarXML1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarXML1ActionPerformed
jFileChooser1.setFileFilter(filterXML);
        int returnVal= jFileChooser1.showOpenDialog(VistaProcesador.this);
        
        if(returnVal == jFileChooser1.APPROVE_OPTION){
        File file=jFileChooser1.getSelectedFile();
        jTextAreaDTD.setText("Cargando archivo:\n"+file.getName());
          // jFileChooser1.setFileFilter(filterXML);
 try {
                jTextAreaDTD.setText(
                        new String (Files.readAllBytes(file.toPath())));
                
                if(controlador == null){
                    controlador = new Controlador(file);
                }else{
                    controlador.setFile(file);
                }
                
            } catch (IOException ex) {
               
                
            }
            labelXML_DTD.setText(file.getName());
        
        
        }else{
            
        }
      
        
    }//GEN-LAST:event_cargarXML1ActionPerformed

    private void cargarXML2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarXML2ActionPerformed
jFileChooser1.setFileFilter(filterXML);
        int returnVal= jFileChooser1.showOpenDialog(VistaProcesador.this);
        
        if(returnVal == jFileChooser1.APPROVE_OPTION){
        File file=jFileChooser1.getSelectedFile();
        jTextAreaXML2.setText("Cargando archivo:\n"+file.getName());
           jFileChooser1.setFileFilter(filterXML);
 try {
                jTextAreaXML2.setText(
                        new String (Files.readAllBytes(file.toPath())));
                
                if(controlador == null){
                    controlador = new Controlador(file);
                }else{
                    controlador.setFile(file);
                }
                
            } catch (IOException ex) {
               
                
            }
            labelXML_XSD.setText(file.getName());
        
        
        }else{
            
        }
    }//GEN-LAST:event_cargarXML2ActionPerformed

    private void cargarXML4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarXML4ActionPerformed
jFileChooser1.setFileFilter(filterXML);
        int returnVal= jFileChooser1.showOpenDialog(VistaProcesador.this);
        
        if(returnVal == jFileChooser1.APPROVE_OPTION){
        File file=jFileChooser1.getSelectedFile();
        jTextAreaXML4.setText("Cargando archivo:\n"+file.getName());
            try {
                jTextAreaXML4.setText(
                        new String (Files.readAllBytes(file.toPath())));
                
                if(controlador == null){
                    controlador = new Controlador(file);
                }else{
                    controlador.setFile(file);
                }
                
            } catch (IOException ex) {
               
                
            }
            labelXML_XSLT.setText(file.getName());
        
        
        }else{
            
        }
    }//GEN-LAST:event_cargarXML4ActionPerformed

    private void validarDTDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validarDTDActionPerformed
        resultadoDTD.setText(controlador.validar());
    }//GEN-LAST:event_validarDTDActionPerformed

    private void cargarDTDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarDTDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cargarDTDActionPerformed

    private void limpiarDTDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarDTDActionPerformed
        // TODO add your handling code here:
        jTextAreaDTD.setText(" ");
        resultadoDTD.setText(" ");
        labelXML_DTD.setText(" ");
        labelDTD_DTD.setText(" ");
    }//GEN-LAST:event_limpiarDTDActionPerformed

    private void limpiarXPATHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarXPATHActionPerformed
        // TODO add your handling code here:
        jTextFieldXPATH.setText(" ");
        jTextAreaXML3.setText(" ");
        resultadoXPATH.setText(" ");
        labelXML_XPath.setText("Archivo XML...");
    }//GEN-LAST:event_limpiarXPATHActionPerformed

    private void limpiarXSDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarXSDActionPerformed
        // TODO add your handling code here:
        jTextAreaXML2.setText(" ");
        jTextAreaXSD.setText(" ");
        resultadoXSD.setText(" ");
        labelXML_XSD.setText("Archivo XML...");
        labelXSD_XSD.setText("Archivo XSD...");
    }//GEN-LAST:event_limpiarXSDActionPerformed

    private void cargarXSDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarXSDActionPerformed
        jFileChooser1.setFileFilter(filterXSD);
        int returnVal = jFileChooser1.showOpenDialog(VistaProcesador.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser1.getSelectedFile();
            String contenido = "";
            try (Scanner sc = new Scanner(file);) {

                while (sc.hasNextLine()) {
                    contenido += sc.nextLine() + "\n";
                    jTextAreaXSD.setText(/*"cargando archivo:\n" + file.getName() + "\n" +*/ contenido);
                    if (controlador == null) {
                        controlador = new Controlador(file);
                    } else {
                        controlador.setFile(file);
                    }
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(VistaProcesador.class.getName()).log(Level.SEVERE, null, ex);
            }
            labelXSD_XSD.setText(file.getName());
        } else {

        }
    }//GEN-LAST:event_cargarXSDActionPerformed

    private void validarXSDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validarXSDActionPerformed
        resultadoXSD.setText(controlador.validateXSD());

    }//GEN-LAST:event_validarXSDActionPerformed

    private void guardarXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarXMLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guardarXMLActionPerformed

    private void cargarXSLTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarXSLTActionPerformed
         jFileChooser1.setFileFilter(filterXSLT);
        int returnVal = jFileChooser1.showOpenDialog(VistaProcesador.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser1.getSelectedFile();
            String contenido = "";
            try (Scanner sc = new Scanner(file);) {

                while (sc.hasNextLine()) {
                    contenido += sc.nextLine() + "\n";
                    jTextAreaXSLT.setText(/*"cargando archivo:\n" + file.getName() + "\n" +*/ contenido);
                    if (controlador == null) {
                        controlador = new Controlador(file);
                        controlador.setFileXSL(file);
                    } else {
                        controlador.setFileXSL(file);
                    }
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(VistaProcesador.class.getName()).log(Level.SEVERE, null, ex);
            }
            labelXSLT_XSLT.setText(file.getName());
        } else {

        }
    }//GEN-LAST:event_cargarXSLTActionPerformed

    private void HTMLsalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HTMLsalidaActionPerformed
         jFileChooser1.setFileFilter(filterHTML);
        int returnVal = jFileChooser1.showSaveDialog(VistaProcesador.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser1.getSelectedFile();
            if (controlador == null) {
                controlador = new Controlador(file);
            } else {
                controlador.setFileHTML(file);
            }
            labelsalidaHTML.setText(file.getName());
        } else {

        }
    }//GEN-LAST:event_HTMLsalidaActionPerformed

    private void ejecutarXSLTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ejecutarXSLTActionPerformed
        resultadoXSLT.setText(controlador.xslTransform());
        //rellenamos el resultado
        String resultado="";
        try (Scanner sc=new Scanner(controlador.getFileHTML());){
            while(sc.hasNextLine()){
                resultado+=sc.nextLine()+"\n";
            }
        } catch (FileNotFoundException ex) {
            
        }
        resultadoXSLT.setText(resultado);
        lblMostrarHTML.setText(resultado);

    }//GEN-LAST:event_ejecutarXSLTActionPerformed

    private void limpiarDTD1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarDTD1ActionPerformed
        resultadoXSLT.setText("");
        jTextAreaXSLT.setText("");
        jTextAreaXML4.setText("");
        labelXML_XSLT.setText("Archivo XML...");
        labelXSLT_XSLT.setText("Archivo XSLT..");
        labelsalidaHTML.setText("Archivo HTML...");
        lblMostrarHTML.setText("Resultado formateado en HTML");
        
        
    }//GEN-LAST:event_limpiarDTD1ActionPerformed

    private void jItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jItemSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jItemSalirActionPerformed

    private void jItemMetalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jItemMetalActionPerformed
        try {
            // TODO add your handling code here:
            UIManager.setLookAndFeel(new MetalLookAndFeel());
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(VistaProcesador.class.getName()).log(Level.SEVERE, null, ex);
        }
        SwingUtilities.updateComponentTreeUI(this);
    }//GEN-LAST:event_jItemMetalActionPerformed

    private void jItemNimbusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jItemNimbusActionPerformed
        try {
            // TODO add your handling code here:
            UIManager.setLookAndFeel(new NimbusLookAndFeel());
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(VistaProcesador.class.getName()).log(Level.SEVERE, null, ex);
        }
        SwingUtilities.updateComponentTreeUI(this);

    }//GEN-LAST:event_jItemNimbusActionPerformed

    private void jItemSistemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jItemSistemaActionPerformed
        try {
            // TODO add your handling code here:
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VistaProcesador.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(VistaProcesador.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(VistaProcesador.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(VistaProcesador.class.getName()).log(Level.SEVERE, null, ex);
        }
                SwingUtilities.updateComponentTreeUI(this);

    }//GEN-LAST:event_jItemSistemaActionPerformed

    private void jItemClasicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jItemClasicoActionPerformed
        try {
            // TODO add your handling code here:
            UIManager.setLookAndFeel(new WindowsClassicLookAndFeel());
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(VistaProcesador.class.getName()).log(Level.SEVERE, null, ex);
        }
                SwingUtilities.updateComponentTreeUI(this);

    }//GEN-LAST:event_jItemClasicoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaProcesador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaProcesador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaProcesador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaProcesador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaProcesador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton HTMLsalida;
    private javax.swing.JPanel about;
    private javax.swing.JPanel about1;
    private javax.swing.JButton cargarDTD;
    private javax.swing.JButton cargarXML1;
    private javax.swing.JButton cargarXML2;
    private javax.swing.JButton cargarXML3;
    private javax.swing.JButton cargarXML4;
    private javax.swing.JButton cargarXSD;
    private javax.swing.JButton cargarXSLT;
    private javax.swing.JButton ejecutarXSLT;
    private javax.swing.JButton evaluarXPATH;
    private javax.swing.JButton guardarDTD;
    private javax.swing.JButton guardarXML;
    private javax.swing.JButton guardarXSD;
    private javax.swing.JButton guardarXSLT;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JMenuItem jItemClasico;
    private javax.swing.JMenuItem jItemMetal;
    private javax.swing.JMenuItem jItemNimbus;
    private javax.swing.JMenuItem jItemSalir;
    private javax.swing.JMenuItem jItemSistema;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextAreaDTD;
    private javax.swing.JTextArea jTextAreaXML2;
    private javax.swing.JTextArea jTextAreaXML3;
    private javax.swing.JTextArea jTextAreaXML4;
    private javax.swing.JTextArea jTextAreaXSD;
    private javax.swing.JTextArea jTextAreaXSLT;
    private javax.swing.JTextField jTextFieldXPATH;
    private javax.swing.JLabel labelDTD_DTD;
    private javax.swing.JLabel labelXML_DTD;
    private javax.swing.JLabel labelXML_XPath;
    private javax.swing.JLabel labelXML_XSD;
    private javax.swing.JLabel labelXML_XSLT;
    private javax.swing.JLabel labelXSD_XSD;
    private javax.swing.JLabel labelXSLT_XSLT;
    private javax.swing.JLabel labelsalidaHTML;
    private javax.swing.JLabel lblMostrarHTML;
    private javax.swing.JButton limpiarDTD;
    private javax.swing.JButton limpiarDTD1;
    private javax.swing.JButton limpiarXPATH;
    private javax.swing.JButton limpiarXSD;
    private javax.swing.JLabel resultado3;
    private javax.swing.JTextArea resultadoDTD;
    private javax.swing.JTextArea resultadoXPATH;
    private javax.swing.JTextArea resultadoXSD;
    private javax.swing.JTextArea resultadoXSLT;
    private javax.swing.JLabel resultadodtd;
    private javax.swing.JLabel resultadoxpath;
    private javax.swing.JLabel resultadoxslt;
    private javax.swing.JButton validarDTD;
    private javax.swing.JButton validarXSD;
    private javax.swing.JPanel validardtd;
    private javax.swing.JPanel validarxpath;
    private javax.swing.JPanel validarxsd;
    private javax.swing.JPanel validarxslt;
    // End of variables declaration//GEN-END:variables
private FileFilter filterXML, filterHTML, filterXSD, filterDTD, filterXSLT, filterXQ;
    private Controlador controlador;
}
